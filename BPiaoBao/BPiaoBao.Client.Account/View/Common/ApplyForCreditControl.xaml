<xctk:BusyIndicator
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
             xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Name="busyIndicator" x:Class="BPiaoBao.Client.Account.View.ApplyForCreditControl" 
             mc:Ignorable="d" 
             d:DesignHeight="65" d:DesignWidth="301" Width="300" Height="100" Style="{DynamicResource BusyIndicatorStyle1}" DisplayAfter="0" BusyContent="检查开通状态...">

    <xctk:BusyIndicator.Resources>
        <Style x:Key="BusyIndicatorStyle1" TargetType="{x:Type xctk:BusyIndicator}">
        	<Setter Property="BusyContent" Value="Please wait..."/>
        	<Setter Property="IsTabStop" Value="False"/>
        	<Setter Property="Focusable" Value="False"/>
        	<Setter Property="OverlayStyle">
        		<Setter.Value>
        			<Style TargetType="{x:Type Rectangle}">
        				<Setter Property="Fill" Value="White"/>
        				<Setter Property="Opacity" Value="0.5"/>
        			</Style>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="ProgressBarStyle">
        		<Setter.Value>
        			<Style TargetType="{x:Type ProgressBar}">
        				<Setter Property="IsIndeterminate" Value="True"/>
        				<Setter Property="Height" Value="15"/>
        				<Setter Property="Margin" Value="8,0,8,8"/>
        			</Style>
        		</Setter.Value>
        	</Setter>
        	<Setter Property="DisplayAfter" Value="0:0:0.1"/>
        	<Setter Property="HorizontalAlignment" Value="Stretch"/>
        	<Setter Property="VerticalAlignment" Value="Stretch"/>
        	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        	<Setter Property="VerticalContentAlignment" Value="Stretch"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type xctk:BusyIndicator}">
        				<Grid>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="VisibilityStates">
        							<VisualState x:Name="Hidden">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<Visibility>Collapsed</Visibility>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Visible">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="busycontent">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<Visibility>Visible</Visibility>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="overlay">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<Visibility>Visible</Visibility>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        						<VisualStateGroup x:Name="BusyStatusStates">
        							<VisualState x:Name="Idle">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="content">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<System:Boolean>True</System:Boolean>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Busy">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames BeginTime="0" Duration="0:0:0.001" Storyboard.TargetProperty="(UIElement.IsEnabled)" Storyboard.TargetName="content">
        										<DiscreteObjectKeyFrame KeyTime="0">
        											<DiscreteObjectKeyFrame.Value>
        												<System:Boolean>False</System:Boolean>
        											</DiscreteObjectKeyFrame.Value>
        										</DiscreteObjectKeyFrame>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="content">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Rectangle x:Name="overlay" Style="{TemplateBinding OverlayStyle}"/>
        					<ContentControl x:Name="content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="False" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
        					<ContentPresenter x:Name="busycontent">
        						<ContentPresenter.Content>
        							<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        								<Border BorderThickness="1" Background="White" CornerRadius="2">
        									<Border.BorderBrush>
        										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        											<GradientStop Color="#FFA3AEB9" Offset="0"/>
        											<GradientStop Color="#FF8399A9" Offset="0.375"/>
        											<GradientStop Color="#FF718597" Offset="0.375"/>
        											<GradientStop Color="#FF617584" Offset="1"/>
        										</LinearGradientBrush>
        									</Border.BorderBrush>
        									<Border CornerRadius="1.5" Margin="1">
        										<Border.Background>
        											<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        												<GradientStop Color="#FFF6F8F9" Offset="0.02"/>
        												<GradientStop Color="#FFB8B8B8" Offset="0.996"/>
        											</LinearGradientBrush>
        										</Border.Background>
        										<Grid MinWidth="150">
        											<Grid.RowDefinitions>
        												<RowDefinition/>
        												<RowDefinition Height="Auto"/>
        											</Grid.RowDefinitions>
        											<ContentPresenter ContentTemplate="{TemplateBinding BusyContentTemplate}" Content="{TemplateBinding BusyContent}" Margin="8"/>
        											<ProgressBar Grid.Row="1" Style="{TemplateBinding ProgressBarStyle}"/>
        										</Grid>
        									</Border>
        								</Border>
        							</Grid>
        						</ContentPresenter.Content>
        					</ContentPresenter>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </xctk:BusyIndicator.Resources>

	<Grid Margin="1">
		<Grid>
			<Grid Background="White" Opacity="0.5"/>
			<StackPanel Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center" Background="White">

				<TextBlock VerticalAlignment="Center"><Run Text="您还没有信用账户"/></TextBlock>
				<Button Content="立即开通" Style="{DynamicResource LinkBtn}" Margin="20,0,0,0">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<ei:CallMethodAction TargetObject="{Binding ElementName=busyIndicator}" MethodName="Switch"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>
				<Button Content="刷新" Width="38" Margin="20,0,0,0">
					<i:Interaction.Triggers>
						<i:EventTrigger EventName="Click">
							<ei:CallMethodAction TargetObject="{Binding ElementName=busyIndicator}" MethodName="Check"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
				</Button>
			</StackPanel>
		</Grid>

	</Grid>
</xctk:BusyIndicator>
