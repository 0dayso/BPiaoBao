<UserControl   xmlns:viewModel="clr-namespace:BPiaoBao.Client.DomesticTicket.ViewModel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"  
             xmlns:wpfSpark="clr-namespace:WPFSpark;assembly=WPFSpark"
             xmlns:oxy="http://oxyplot.codeplex.com"  
              xmlns:converters="clr-namespace:BPiaoBao.Client.DomesticTicket.View.Converters"
              xmlns:controls="clr-namespace:BPiaoBao.Client.UIExt.CommonControl;assembly=BPiaoBao.Client.UIExt"
              
              xmlns:behaviors="clr-namespace:BPiaoBao.Client.UIExt.Behaviors;assembly=BPiaoBao.Client.UIExt"
              x:Class="BPiaoBao.Client.DomesticTicket.View.TicketBookingManagerControl" 
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="900" Background="White" DataContext="{x:Static viewModel:ViewModelLocator.TicketBookingManager}"
              >

    <UserControl.Resources>
        <converters:ShowStatusConverter x:Key="ShowStatusConverter"/>
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#F3F3F3" Offset="0"/>
        	<GradientStop Color="#EBEBEB" Offset="0.5"/>
        	<GradientStop Color="#DDDDDD" Offset="0.5"/>
        	<GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <Style x:Key="ButtonFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="tabButtonStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Grid>
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="MouseOver">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image1">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="image">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Image x:Name="image1" Source="/BPiaoBao.Client.DomesticTicket;component/Image/qiehuan1.png" Stretch="Fill"/>
        					<Image x:Name="image" Source="/BPiaoBao.Client.DomesticTicket;component/Image/qiehuan2.png" Stretch="Fill"/>
        				</Grid>
        				<ControlTemplate.Triggers>
        					<Trigger Property="IsKeyboardFocused" Value="true"/>
        					<Trigger Property="ToggleButton.IsChecked" Value="true"/>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Foreground" Value="#ADADAD"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <Style x:Key="checkButtonStyle" TargetType="{x:Type Button}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="HorizontalContentAlignment" Value="Center"/>
        	<Setter Property="VerticalContentAlignment" Value="Center"/>
        	<Setter Property="Padding" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type Button}">
        				<Border x:Name="border" BorderBrush="#FF00578B" BorderThickness="1" CornerRadius="2">
        					<Border.Background>
        						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
        							<GradientStop Color="#FF0075BA" Offset="0"/>
        							<GradientStop Color="#FF0068A4" Offset="1"/>
        						</LinearGradientBrush>
        					</Border.Background>
        					<!--<VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF005587"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF0089DA"/>
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="border">
                                                <EasingColorKeyFrame KeyTime="0" Value="#FF006FB0"/>
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>-->
        					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="查询"/>
        				</Border>

        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>

        <Style x:Key="FocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFBFDFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FFFFFFFF"/>
        <Style x:Key="OptionMarkFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF0F6FB"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FFAAB0C3"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="RadioButtonStyleTicketType" TargetType="{x:Type RadioButton}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="0"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type RadioButton}">
        				<Border x:Name="bd" Cursor="Hand" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" Height="70" Margin="0,5,0,0" CornerRadius="5" Width="70">
        					<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
        						<Grid.RowDefinitions>
        							<RowDefinition Height="Auto"/>
        							<RowDefinition Height="*"/>
        						</Grid.RowDefinitions>

        						<ContentPresenter Height="31" Margin="0,5,0,0"/>
        						<TextBlock Grid.Row="1" HorizontalAlignment="Center" TextWrapping="Wrap" 
        							Text="{TemplateBinding Tag}" VerticalAlignment="Center"  Height="25"  
        							Margin="0,8,0,0" Foreground="#FF76BDEE" FontWeight="Bold" FontSize="13.333"/>

        					</Grid>

        				</Border>
        				<ControlTemplate.Triggers>

        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Background" TargetName="bd" Value="{StaticResource RadioButton.MouseOver.Background}"/>
        						<Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource RadioButton.MouseOver.Border}"/>
        						<Setter Property="BorderThickness" TargetName="bd" Value="1"/>

        					</Trigger>
        					<Trigger Property="IsPressed" Value="true">
        						<Setter Property="Background" TargetName="bd" Value="{StaticResource RadioButton.Pressed.Background}"/>
        						<Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource RadioButton.Pressed.Border}"/>
        					</Trigger>
        					<Trigger Property="IsEnabled" Value="false">
        						<Setter Property="Background" TargetName="bd" Value="{StaticResource RadioButton.Disabled.Background}"/>
        						<Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource RadioButton.Disabled.Border}"/>
        					</Trigger>
        					<Trigger Property="IsChecked" Value="true">
        						<Setter Property="Background" TargetName="bd" Value="{StaticResource RadioButton.MouseOver.Background}"/>
        						<Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource RadioButton.MouseOver.Border}"/>
        						<Setter Property="BorderThickness" TargetName="bd" Value="1"/>
        					</Trigger>
        					<Trigger Property="IsChecked" Value="false">
        						<Setter Property="Background" TargetName="bd" Value="{StaticResource RadioButton.Static.Background}"/>
        						<Setter Property="BorderBrush" TargetName="bd" Value="{StaticResource RadioButton.Static.Border}"/>
        						<Setter Property="BorderThickness" TargetName="bd" Value="0"/>
        					</Trigger>
        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>


        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxTimeOrderByToggleButton" TargetType="{x:Type ToggleButton}">
        	<Setter Property="OverridesDefaultStyle" Value="true"/>
        	<Setter Property="IsTabStop" Value="false"/>
        	<Setter Property="Focusable" Value="false"/>
        	<Setter Property="ClickMode" Value="Press"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type ToggleButton}">
        				<Border  x:Name="templateRoot" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="0" Background="#FFF7F5E3" SnapsToDevicePixels="true">
        					<Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
        						<Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
        					</Border>
        				</Border>
        				<ControlTemplate.Triggers>

        					<Trigger Property="IsMouseOver" Value="true">
        						<Setter Property="Background" TargetName="templateRoot" Value="White"/>
        						<Setter Property="BorderThickness" TargetName="templateRoot" Value="1"/>
        						<Setter Property="BorderBrush" TargetName="templateRoot" Value="#FFACC8E0"/>
        					</Trigger>

        				</ControlTemplate.Triggers>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTimeOrderTemplate" TargetType="{x:Type ComboBox}">
        	<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        		<Grid.ColumnDefinitions>
        			<ColumnDefinition Width="*"/>
        			<ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        		</Grid.ColumnDefinitions>
        		<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
        			<Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
        				<ScrollViewer x:Name="DropDownScrollViewer">
        					<Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
        						<Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
        							<Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
        						</Canvas>
        						<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        					</Grid>
        				</ScrollViewer>
        			</Border>
        		</Popup>
        		<ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxTimeOrderByToggleButton}"/>
        		<ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" TextElement.Foreground="Gray" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        	</Grid>
            <ControlTemplate.Triggers>

                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>

                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxTimeOrderByStyle" TargetType="{x:Type ComboBox}">
        	<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        	<Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
        	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        	<Setter Property="Padding" Value="6,3,5,3"/>
        	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        	<Setter Property="Template" Value="{StaticResource ComboBoxTimeOrderTemplate}"/>

        </Style>
    </UserControl.Resources>
    <!--<UserControl.DataContext>
        <ViewModel:TicketBookingManagerViewModel/>
    </UserControl.DataContext>-->
	<Grid>
		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup">
				<VisualState x:Name="FocusState">
					<Storyboard>
						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="border">
							<EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA"/>
						</ColorAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
				<VisualState x:Name="UnfocusState"/>
			</VisualStateGroup>
			<VisualStateGroup x:Name="PopupStateGroup">
				<VisualStateGroup.Transitions>
					<VisualTransition GeneratedDuration="0"/>
				</VisualStateGroup.Transitions>
				<VisualState x:Name="OpenState"/>
				<VisualState x:Name="NormalState">
					<Storyboard>
						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="overlay">
							<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
						</DoubleAnimationUsingKeyFrames>
					</Storyboard>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid  Background="#FFFBFDFF" Grid.Row="0">
			<Grid.RowDefinitions>
				<RowDefinition Height="100"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Border Grid.Row="0"   BorderThickness="0,0,0,1"  Padding="0,0,0,10"   Background="#FFFBFDFF" Margin="20,0,20,0" VerticalAlignment="Center">
				<Border.BorderBrush>
					<LinearGradientBrush SpreadMethod="Repeat" StartPoint="0,4" EndPoint="4,0" MappingMode="Absolute">
						<GradientStop Color="#FFDFDFDF" Offset="0"/>
						<GradientStop Color="#FFDFDFDF" Offset="0.2"/>
						<GradientStop Color="Transparent" Offset="0.4"/>
						<GradientStop Color="Transparent" Offset="0.6"/>
						<GradientStop Color="#FFDFDFDF" Offset="0.8"/>
						<GradientStop Color="#FFDFDFDF" Offset="1"/>
					</LinearGradientBrush>
				</Border.BorderBrush>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="120"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="100"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<Grid Grid.Column="0" >
						<TextBlock Text="航程类型：" HorizontalAlignment="Right" Margin="0,12,10,0" Foreground="#FF818080" FontSize="14"/>
					</Grid>

					<RadioButton Tag="单程" Command="{Binding SwitchFlightTypeCommand, Mode=OneWay}" CommandParameter="1" GroupName="FlightType" IsChecked="True"   Grid.Column="1" Width="70" Height="74.5" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Style="{DynamicResource RadioButtonStyleTicketType}">
						<Image Source="/BPiaoBao.Client.DomesticTicket;component/Image/bookicon_09.png" Height="Auto" Stretch="None"/>
					</RadioButton>
					<RadioButton Tag="往返" Command="{Binding SwitchFlightTypeCommand, Mode=OneWay}" CommandParameter="2" GroupName="FlightType" Grid.Column="2" Width="70" Height="74.5" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Style="{DynamicResource RadioButtonStyleTicketType}">
						<Image Source="/BPiaoBao.Client.DomesticTicket;component/Image/bookicon_06.png" Height="Auto" Stretch="None"/>
					</RadioButton>
					<RadioButton Tag="联程" Command="{Binding SwitchFlightTypeCommand, Mode=OneWay}" CommandParameter="3" GroupName="FlightType" Grid.Column="3" Width="70" Height="74.5" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Style="{DynamicResource RadioButtonStyleTicketType}">
						<Image Source="/BPiaoBao.Client.DomesticTicket;component/Image/bookicon_03.png" Height="Auto" Stretch="None"/>
					</RadioButton>
					<StackPanel Orientation="Horizontal" Grid.Column="5" Margin="0,0,0,2">

						<Image  Width="17" VerticalAlignment="Bottom"  Source="/BPiaoBao.Client.DomesticTicket;component/Image/bookicon_15.png"/>


						<TextBlock   Text="可实时搜索" Foreground="#FFC3C3C3" VerticalAlignment="Bottom"/>
						<TextBlock Text="3000" Foreground="#FFFB792F" Padding="2,0,2,0" FontWeight="Bold" VerticalAlignment="Bottom"/>
						<TextBlock  Text="条航线" Foreground="#FFC3C3C3" VerticalAlignment="Bottom"/>

					</StackPanel>

				</Grid>

			</Border>

			<!--单程Grid Start-->
			<Grid Background="#00000000" Grid.Row="1" Margin="15,0,0,15" Visibility="{Binding IsShowOne, Converter={StaticResource ShowStatusConverter}, Mode=TwoWay}">
				<Grid.RowDefinitions>
					<RowDefinition Height="37"/>
					<RowDefinition Height="37"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="113"/>
					<ColumnDefinition Width="165"/>
					<ColumnDefinition Width="22"/>
					<ColumnDefinition Width="97"/>
					<ColumnDefinition Width="189"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<TextBlock TextWrapping="Wrap" Text="出发城市：" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0" Height="15.24" Width="60"/>
				<TextBlock TextWrapping="Wrap" Text="到达城市：" Foreground="#FF666666" HorizontalAlignment="Right" Grid.Row="1"
					Grid.Column="0" VerticalAlignment="Center" Margin="0" Height="15.24" Width="60"/>

				<controls:CityPicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="5,0" Height="24" Width="150" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" SelectedCity="{Binding FromCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<controls:CityPicker  HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="5,0" Width="150" BorderBrush="{x:Null}"   BorderThickness="0" Grid.Row="1" Height="24" SelectedCity="{Binding ToCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<Button Content="Button" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2"
					Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource tabButtonStyle}" Height="38" Width="16" Command="{Binding SwitchCityCommand}"/>

				<TextBlock TextWrapping="Wrap" Text="出发日期：" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center"
					Grid.Row="0" Grid.Column="3" Margin="0" Height="15.24" Width="60"/>
				<DatePicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="4" Height="24" Width="150" Margin="5,0" SelectedDate="{Binding TakeDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<i:Interaction.Behaviors>
						<behaviors:DatePickerDisplayDateStartBehavior/>
					</i:Interaction.Behaviors>
				</DatePicker>

				<TextBlock TextWrapping="Wrap" Text="航空公司：" Grid.Row="1" Grid.Column="3" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Height="15.24" Width="Auto" />
                <ComboBox ItemsSource="{Binding Carray,Mode=TwoWay}"   IsEditable="True"
                              DisplayMemberPath="AirName"  SelectedValuePath="AirCode" 
                              SelectedItem="{Binding SelectedCarray}"  Grid.Row="1" Grid.Column="4"  Margin="5,0" Height="24" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center">

                </ComboBox>
                <!--<controls:CarrayPicker Grid.Row="1" Grid.Column="4" HorizontalAlignment="Left" VerticalAlignment="Center"   Margin="5,0" Height="24" Width="150" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" SelectedCarray="{Binding SelectedCarray, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                <Button Content="查询" Grid.Column="5" Grid.Row="0" Grid.RowSpan="2"  FontSize="16" Foreground="White" BorderThickness="0" Width="118" Height="41" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding SwitchToQueryResultViewCommand, Mode=OneWay}"/>
			</Grid>
			<!--单程Grid End-->


			<!--往返Grid Start-->
			<Grid Background="#00000000" Grid.Row="1" Margin="15,0,0,15" Visibility="{Binding IsShowTwo, Converter={StaticResource ShowStatusConverter}, Mode=TwoWay}">
				<Grid.RowDefinitions>
					<RowDefinition Height="37"/>
					<RowDefinition Height="37"/>
                    <RowDefinition Height="37"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="113"/>
					<ColumnDefinition Width="165"/>
					<ColumnDefinition Width="22"/>
					<ColumnDefinition Width="97"/>
					<ColumnDefinition Width="189"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<TextBlock TextWrapping="Wrap" Text="出发城市：" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0" Height="15.24" Width="60"/>
				<TextBlock TextWrapping="Wrap" Text="到达城市：" Foreground="#FF666666" HorizontalAlignment="Right" Grid.Row="1"
					Grid.Column="0" VerticalAlignment="Center" Margin="0" Height="15.24" Width="60"/>

				<controls:CityPicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="5,0" Height="24" Width="150" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" SelectedCity="{Binding FromCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<controls:CityPicker  HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="5,0" Width="150" BorderBrush="{x:Null}"   BorderThickness="0" Grid.Row="1" Height="24" SelectedCity="{Binding ToCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<Button Content="Button" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2"
					Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource tabButtonStyle}" Height="38" Width="16" Command="{Binding SwitchCityCommand}"/>

				<TextBlock TextWrapping="Wrap" Text="出发日期：" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center"
					Grid.Row="0" Grid.Column="3" Margin="0" Height="15.24" Width="60"/>
				<TextBlock TextWrapping="Wrap" Text="返回日期：" Foreground="#FF666666" HorizontalAlignment="Right" Grid.Row="1" VerticalAlignment="Center" Height="15.24" Width="60" Grid.Column="3" Margin="0"  />
				<DatePicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="4" Height="24" Width="150" Margin="5,0" SelectedDate="{Binding TakeDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<i:Interaction.Behaviors>
						<behaviors:DatePickerDisplayDateStartBehavior/>
					</i:Interaction.Behaviors>
				</DatePicker>
				<DatePicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="4"  Grid.Row="1"  Height="24" Width="150" Margin="5,0" SelectedDate="{Binding BackDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<i:Interaction.Behaviors>
						<behaviors:DatePickerDisplayDateStartBehavior/>
					</i:Interaction.Behaviors>
				</DatePicker>


				<TextBlock TextWrapping="Wrap" Text="航空公司：" Grid.Row="2" Grid.Column="0" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Height="15.24" Width="Auto" />

                <ComboBox ItemsSource="{Binding Carray,Mode=TwoWay}"   IsEditable="True"
                              DisplayMemberPath="AirName"  SelectedValuePath="AirCode" 
                              SelectedItem="{Binding SelectedCarray}"  Grid.Row="2" Grid.Column="1"  Margin="5,0" Height="24" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center">

                </ComboBox>
                <!--<controls:CarrayPicker Grid.Row="2" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"   Margin="5,0" Height="24" Width="150" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" SelectedCarray="{Binding SelectedCarray, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                <Button Content="查询" Grid.Column="5" Grid.Row="0" Grid.RowSpan="2"  FontSize="16" Foreground="White" BorderThickness="0" Width="118" Height="41" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding SwitchToQueryResultViewCommand, Mode=OneWay}"/>
			</Grid>
			<!--往返Grid End-->

			<!--联程Grid Start-->
			<Grid Background="#00000000" Grid.Row="1" Margin="15,0,0,15" Visibility="{Binding IsShowConnWay, Converter={StaticResource ShowStatusConverter}, Mode=TwoWay}">
				<Grid.RowDefinitions>
					<RowDefinition Height="37"/>
					<RowDefinition Height="37"/>
					<RowDefinition Height="37"/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="113"/>
					<ColumnDefinition Width="165"/>
					<ColumnDefinition Width="22"/>
					<ColumnDefinition Width="97"/>
					<ColumnDefinition Width="189"/>
					<ColumnDefinition/>
				</Grid.ColumnDefinitions>
				<TextBlock TextWrapping="Wrap" Text="出发城市：" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0" Height="15.24" Width="60"/>
				<TextBlock TextWrapping="Wrap" Text="到达城市：" Foreground="#FF666666" HorizontalAlignment="Right" Grid.Row="1"
					Grid.Column="0" VerticalAlignment="Center" Margin="0" Height="15.24" Width="60"/>

				<controls:CityPicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="1" Margin="5,0" Height="24" Width="150" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" SelectedCity="{Binding FromCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<controls:CityPicker  HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="5,0" Width="150" BorderBrush="{x:Null}"   BorderThickness="0" Grid.Row="1" Height="24" SelectedCity="{Binding ToCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<Button Content="Button" HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="2"
					Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource tabButtonStyle}" Height="38" Width="16" Command="{Binding SwitchCityCommand}"/>

				<TextBlock TextWrapping="Wrap" Text="出发日期：" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center"
					Grid.Row="0" Grid.Column="3" Margin="0" Height="15.24" Width="60"/>
				<DatePicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Row="0" Grid.Column="4" Height="24" Width="150" Margin="5,0" SelectedDate="{Binding TakeDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<i:Interaction.Behaviors>
						<behaviors:DatePickerDisplayDateStartBehavior/>
					</i:Interaction.Behaviors>
				</DatePicker>

				<TextBlock TextWrapping="Wrap" Text="中转城市：" Grid.Row="2" Grid.Column="0" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Height="15.24" Width="Auto" />
				<TextBlock TextWrapping="Wrap" Text="中转日期：" Grid.Column="3" Grid.Row="1" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Height="15.24" Width="Auto" />

				<controls:CityPicker  HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="1" Margin="5,0" Width="150" BorderBrush="{x:Null}"   BorderThickness="0" Grid.Row="2" Height="24" SelectedCity="{Binding MidCity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				<DatePicker HorizontalAlignment="Left" VerticalAlignment="Center" Grid.Column="4"  Grid.Row="1"  Height="24" Width="150" Margin="5,0" SelectedDate="{Binding MidDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
					<i:Interaction.Behaviors>
						<behaviors:DatePickerDisplayDateStartBehavior/>
					</i:Interaction.Behaviors>
				</DatePicker>

				<TextBlock TextWrapping="Wrap" Text="航空公司：" Grid.Row="2" Grid.Column="3" Foreground="#FF666666" HorizontalAlignment="Right" VerticalAlignment="Center" Height="15.24" Width="Auto" />
                <ComboBox ItemsSource="{Binding Carray,Mode=TwoWay}"   IsEditable="True"
                              DisplayMemberPath="AirName"  SelectedValuePath="AirCode" 
                              SelectedItem="{Binding SelectedCarray}"  Grid.Row="2" Grid.Column="4"  Margin="5,0" Height="24" Width="150" HorizontalAlignment="Left" VerticalAlignment="Center">

                </ComboBox>
                <!--<controls:CarrayPicker Grid.Row="2" Grid.Column="4" HorizontalAlignment="Left" VerticalAlignment="Center"   Margin="5,0" Height="24" Width="150" BorderBrush="{x:Null}" Background="{x:Null}" BorderThickness="0" SelectedCarray="{Binding SelectedCarray, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->

                <Button Content="查询" Grid.Column="5" Grid.Row="0" Grid.RowSpan="2"  FontSize="16" Foreground="White" BorderThickness="0" Width="118" Height="41" HorizontalAlignment="Left" VerticalAlignment="Center" Command="{Binding SwitchToQueryResultViewCommand, Mode=OneWay}"/>
			</Grid>
			<!--联程Grid End-->

		</Grid>

		<Border Grid.Row="1" BorderThickness="0,2,0,0">
			<Border.BorderBrush>
				<LinearGradientBrush SpreadMethod="Repeat" StartPoint="0,4" EndPoint="4,0" MappingMode="Absolute">
					<GradientStop Color="#FFDFDFDF" Offset="0"/>
					<GradientStop Color="#FFDFDFDF" Offset="0.2"/>
					<GradientStop Color="Transparent" Offset="0.4"/>
					<GradientStop Color="Transparent" Offset="0.6"/>
					<GradientStop Color="#FFDFDFDF" Offset="0.8"/>
					<GradientStop Color="#FFB7C7DA" Offset="1"/>
				</LinearGradientBrush>
			</Border.BorderBrush>
			<Grid  Focusable="True">
				<Grid x:Name="Child1" Margin="25,0">
					<Grid.RowDefinitions>
						<RowDefinition Height="45"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0,15.163,0,0" TextWrapping="Wrap" Text="最新出票统计" VerticalAlignment="Top" Height="15.837" Style="{DynamicResource Head2TextBlock}"/>
					<oxy:Plot Grid.Row="1" Padding="-19,8,-4,8" LegendBackground="#FFBB4545" LegendBorder="#FFD63A00" PlotAreaBorderColor="#FFCEDDE5" TextColor="#FF858DA4" Background="#FFFBFCFE" Margin="0,0,0,20" BorderBrush="#FFCEDDE5" BorderThickness="1">
						<oxy:Plot.Axes>
							<oxy:LinearAxis IsZoomEnabled="False" Position="Left" TicklineColor="#FFB9CADC" IsPanEnabled="False" Minimum="-0.01"/>

							<oxy:CategoryAxis TicklineColor="#FFB9CADC" IsZoomEnabled="False" IsPanEnabled="False" ItemsSource="{Binding ChartModel}" LabelField="DayFormatString" />

						</oxy:Plot.Axes>
						<oxy:ColumnSeries ItemsSource="{Binding ChartModel}" TrackerFormatString="交易额：￥{4:f2}" ValueField="TradeTotalMoney" FillColor="#FF46ADE8" />
					</oxy:Plot>
					<!--<Border x:Name="bdTimeOrderBy" Grid.Row="1" 
                            BorderBrush="#FFCEDDE5" 
                            Background="#FFF7F5E3" 
                            BorderThickness="1,1,1,0" 
                            Height="35"  
                            VerticalAlignment="Top" 
                            Margin="42,0,0,0">
                        <StackPanel  Orientation="Horizontal"  HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0">
                            <Border  Margin="20,0,0,0"  BorderThickness="0,0,1,0" BorderBrush="#FFCEDDE5" Padding="20,0">
                                <ComboBox HorizontalAlignment="Left"  VerticalAlignment="Top" Width="120" Style="{DynamicResource ComboBoxTimeOrderByStyle}">
                                    <ComboBoxItem Content="2014-03-25" IsSelected="True" />
                                    <ComboBoxItem Content="2014-03-26"/>
                                    <ComboBoxItem Content="2014-03-27"/>
                                    <ComboBoxItem Content="2014-03-28"/>
                                    <ComboBoxItem Content="2014-03-29"/>
                                    <ComboBoxItem Content="2014-03-30"/>
                                    <ComboBoxItem Content="2014-03-31"/>
                                </ComboBox>
                            </Border>
                            <Border Margin="20,0">
                                <ComboBox HorizontalAlignment="Left"  VerticalAlignment="Top" Width="120" Style="{DynamicResource ComboBoxTimeOrderByStyle}">
                                    <ComboBoxItem Content="2014-03-25" IsSelected="True" />
                                    <ComboBoxItem Content="2014-03-26"/>
                                    <ComboBoxItem Content="2014-03-27"/>
                                    <ComboBoxItem Content="2014-03-28"/>
                                    <ComboBoxItem Content="2014-03-29"/>
                                    <ComboBoxItem Content="2014-03-30"/>
                                    <ComboBoxItem Content="2014-03-31"/>
                                </ComboBox>
                            </Border>


                        </StackPanel>

                    </Border>-->

				</Grid>

				<wpfSpark:SprocketControl  Height="100" Width="100" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>

			</Grid>

		</Border>
	</Grid>



</UserControl>
