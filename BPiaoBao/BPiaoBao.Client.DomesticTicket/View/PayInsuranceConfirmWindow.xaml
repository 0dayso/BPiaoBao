<Window x:Class="BPiaoBao.Client.DomesticTicket.View.PayInsuranceConfirmWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:uiExt="clr-namespace:BPiaoBao.Client.UIExt;assembly=BPiaoBao.Client.UIExt"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"		
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Converters="clr-namespace:BPiaoBao.Client.DomesticTicket.View.Converters" 
	    xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
        xmlns:Model="clr-namespace:BPiaoBao.Client.UIExt.Model;assembly=BPiaoBao.Client.UIExt" 
	    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
	    xmlns:System="clr-namespace:System;assembly=mscorlib" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
        xmlns:WPFSpark="clr-namespace:WPFSpark;assembly=WPFSpark" 
        mc:Ignorable="d" 
        Title="确认投保" Height="500" Width="1000" WindowStyle="None" WindowStartupLocation="CenterOwner" ResizeMode="NoResize" >
    <Window.Resources>
        <!--乘客信息模板-->
        <DataTemplate x:Key="OperaTemplate">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <xctk:IntegerUpDown VerticalAlignment="Center" Value="{Binding PayInsuranceSkyWayModels[0].InsuranceCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding DataContext.ValueCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:IntegerUpDown>

            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="OperaTemplate1">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <xctk:IntegerUpDown VerticalAlignment="Center" Value="{Binding PayInsuranceSkyWayModels[1].InsuranceCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Minimum="0" Maximum="1">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="ValueChanged">
                            <i:InvokeCommandAction Command="{Binding DataContext.ValueCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:IntegerUpDown>

            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AgeOperaTemplate">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <ComboBox Height="20" ItemsSource="{Binding DataContext.AgeTypeItems, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" SelectedValue="{Binding PassengerType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="50" DisplayMemberPath="Value" SelectedValuePath="Key" HorizontalAlignment="Center" VerticalAlignment="Center"></ComboBox>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="SexOperaTemplate">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <ComboBox Height="20" ItemsSource="{Binding DataContext.AllInsextypes, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" SelectedValue="{Binding SexType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Width="50" DisplayMemberPath="Value" SelectedValuePath="Key" HorizontalAlignment="Center" VerticalAlignment="Center"></ComboBox>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="BirthOperaTemplate">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <!--DisplayDateStart="{Binding DisplayDateStart,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"  DisplayDateEnd="{Binding DisplayDateEnd,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"-->
                <DatePicker HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="100" SelectedDate="{Binding Birthday,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" >
                </DatePicker>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="IDTypeOperaTemplate">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <ComboBox Height="20" Width="100" ItemsSource="{Binding IDTypeItems,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" SelectedValue="{Binding IDType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Value" SelectedValuePath="Key" HorizontalAlignment="Center" VerticalAlignment="Center"></ComboBox>
                <!--<ComboBox Height="20" Width="100" ItemsSource="{Binding DataContext.IDTypeItems, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" SelectedValue="{Binding IDType,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" DisplayMemberPath="Value" SelectedValuePath="Key" HorizontalAlignment="Center" VerticalAlignment="Center"></ComboBox>-->
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="NoOperaTemplate">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <TextBox Height="20" Width="140" Text="{Binding ID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TelOperaTemplate">
            <StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                <TextBox Height="20" Width="90" Text="{Binding Tel,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBox>
            </StackPanel>
        </DataTemplate>
        <Converters:SettlementAmountConverter x:Key="SettlementAmountConverter"/>
        <SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
        <Style x:Key="CheckRadioFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle StrokeDashArray="1 2" StrokeThickness="1" Stroke="Black" SnapsToDevicePixels="true" Margin="14,0,0,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RadioButtonStyle" TargetType="{x:Type RadioButton}">
            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="#F4F4F4"/>
            <Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Themes:BulletChrome BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" IsChecked="{TemplateBinding IsChecked}" IsRound="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}"/>
                            </BulletDecorator.Bullet>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked"/>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0.49"/>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Indeterminate"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                                <Setter Property="Padding" Value="4,0,0,0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Converters:ShowPayInsuranceGridConverter x:Key="ShowPayInsuranceGridConverter"/>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger>
            <i:InvokeCommandAction Command="{Binding InitlizeCommand}"/>
        </i:EventTrigger>
        <ei:DataTrigger Binding="{Binding IsDone}" Value="True">
            <!--<ei:CallMethodAction MethodName="Close" />-->
            <ei:ChangePropertyAction TargetObject="{Binding ElementName=window}" PropertyName="DialogResult" Value="True"/>
        </ei:DataTrigger>
    </i:Interaction.Triggers>
    <Window.Style>
        <StaticResource ResourceKey="CustomWindowStyle"/>
    </Window.Style>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="CashState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="txtCredit">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="CreditState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="txtCash">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="txtCredit">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="275"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="344"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border x:Name="bg" Grid.ColumnSpan="2" BorderThickness="0,0,0,1" BorderBrush="#FFE3E3E3" d:IsLocked="True" >
            <Grid Background="#FFF7F8FA"/>
        </Border>
        <Grid Margin="0,0,0,1" d:IsLocked="True">
            <Image Source="/BPiaoBao.Client.DomesticTicket;component/Image/baoxian.png" Stretch="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Grid>
        <Grid Grid.ColumnSpan="2" Margin="15,0,0,0" Grid.Column="1" ScrollViewer.VerticalScrollBarVisibility="Hidden" DataContext="{Binding Order}">
            <Grid.RowDefinitions>
                <RowDefinition Height="35"/>
                <RowDefinition Height="29"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding OldOrderId, StringFormat=成人订单号：\{0\}}" VerticalAlignment="Center" Padding="0,0,0,0" FontSize="16" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"
                       Visibility="{Binding DataContext.IsShowOldOrderId,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},Converter={StaticResource BooleanToVisibilityConverter}}" />
            <StackPanel Orientation="Horizontal" Grid.Row="1">
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding ShowPnrCode, StringFormat=PNR编码：\{0\}}" VerticalAlignment="Center" FontSize="16"/>
                <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="{Binding OrderId, StringFormat=订单号：\{0\}}" VerticalAlignment="Center" Padding="45,0,0,0" FontSize="16" ToolTip="{Binding Text, RelativeSource={RelativeSource Self}}"/>
            </StackPanel>
            <Path Data="M1,64.5 L590.83333,63.166667" HorizontalAlignment="Left" Height="2.333" Grid.Row="2" Stretch="Fill" Stroke="#FF0F0E0E" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" StrokeDashArray="3" StrokeThickness="0.5" Margin="0,6,25,0">
                <Path.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-180"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Path.RenderTransform>
            </Path>
            <ScrollViewer Grid.Row="2" Margin="0,10,0,0" HorizontalScrollBarVisibility="Hidden">
                <Grid Height="259" Width="670">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <ScrollViewer ScrollViewer.CanContentScroll="True" Grid.Row="0" Grid.ColumnSpan="3" Grid.RowSpan="6" Visibility="{Binding DataContext.IsSingleFlight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},ConverterParameter=1,Converter={StaticResource ShowPayInsuranceGridConverter},Mode=TwoWay}">
                        <Grid Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="6" Visibility="{Binding DataContext.IsShowGrid,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <DataGrid ScrollViewer.CanContentScroll="True" BorderThickness="0" ItemsSource="{Binding DataContext.PayInsuranceModels,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},Mode=TwoWay}" AutoGenerateColumns="False" GridLinesVisibility="Horizontal" Background="{x:Null}" MinRowHeight="25" HorizontalGridLinesBrush="#7FA6C3E3" HeadersVisibility="Column" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" CanUserAddRows="False" CanUserDeleteRows="False" >
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="保险份数" CellTemplate="{StaticResource OperaTemplate}"/>
                                    <DataGridTextColumn Binding="{Binding PassengerName}" Width="Auto" Header="乘机人" ElementStyle="{StaticResource WrappedCenteredTextBlock}" />
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="类型" CellTemplate="{StaticResource AgeOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="性别" CellTemplate="{StaticResource SexOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="出生日期" CellTemplate="{StaticResource BirthOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="证件类型" CellTemplate="{StaticResource IDTypeOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="证件号" CellTemplate="{StaticResource NoOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="手机号" CellTemplate="{StaticResource TelOperaTemplate}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </ScrollViewer>
                    <ScrollViewer ScrollViewer.CanContentScroll="True" Grid.Row="0" Grid.ColumnSpan="3" Grid.RowSpan="6" Visibility="{Binding DataContext.IsSingleFlight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},ConverterParameter=0,Converter={StaticResource ShowPayInsuranceGridConverter},Mode=TwoWay}">
                        <Grid Grid.Row="1" Grid.ColumnSpan="3" Grid.RowSpan="6" Visibility="{Binding IsShowGrid, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <DataGrid ScrollViewer.CanContentScroll="True" BorderThickness="0" ItemsSource="{Binding DataContext.PayInsuranceModels,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},Mode=TwoWay}" AutoGenerateColumns="False" GridLinesVisibility="Horizontal" Background="{x:Null}" MinRowHeight="25" HorizontalGridLinesBrush="#7FA6C3E3" HeadersVisibility="Column" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" CanUserAddRows="False" CanUserDeleteRows="False" >
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="保险份数" CellTemplate="{StaticResource OperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="第二程保险份数" CellTemplate="{StaticResource OperaTemplate1}"/>
                                    <DataGridTextColumn Binding="{Binding PassengerName}" Width="Auto" Header="乘机人" ElementStyle="{StaticResource WrappedCenteredTextBlock}" />
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="类型" CellTemplate="{StaticResource AgeOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="性别" CellTemplate="{StaticResource SexOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="出生日期" CellTemplate="{StaticResource BirthOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="证件类型" CellTemplate="{StaticResource IDTypeOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="证件号" CellTemplate="{StaticResource NoOperaTemplate}"/>
                                    <DataGridTemplateColumn  Width="Auto" ClipboardContentBinding="{x:Null}" Header="手机号" CellTemplate="{StaticResource TelOperaTemplate}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Grid>
                    </ScrollViewer>
                    <TextBlock Grid.Row="6" Margin="0,5" Visibility="{Binding DataContext.IsShowGrid,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}},Converter={StaticResource BooleanToVisibilityConverter}}">
                         <Run Text="保险总数："/>
                         <Run Text="{Binding DataContext.AllInsuranceCount,Mode=OneWay,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}"/>  
                         <Run Text="份"/>
                    </TextBlock>
                </Grid>
            </ScrollViewer>
        </Grid>
        <Grid Grid.Row="1" Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Button Grid.Row="1" Content="确认投保" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{StaticResource PayBtn}" Height="28" Width="90" Click="Button_Click"/>
            <!--Command="{Binding DataContext.ConfirmInsuranceCommand, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" />-->
            <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="14">
                <Run Foreground="#FFFD7F68" Text="温馨提示"/><Run Text="："/>    
                <Run Text="请确认乘机人相关信息，投保成功后将无法进行更改。该信息对PNR内容不会造成影响。" Foreground="#FF666666" />
            </TextBlock>
        </Grid>
        <WPFSpark:SprocketControl HorizontalAlignment="Center" Height="100" VerticalAlignment="Center" Width="100" Grid.RowSpan="2" Grid.ColumnSpan="2" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</Window>
