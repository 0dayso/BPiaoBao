<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
             xmlns:Converters="clr-namespace:BPiaoBao.Client.DomesticTicket.View.Converters" xmlns:ViewModel="clr-namespace:BPiaoBao.Client.DomesticTicket.ViewModel" xmlns:WPFSpark="clr-namespace:WPFSpark;assembly=WPFSpark" xmlns:UIExt="clr-namespace:BPiaoBao.Client.UIExt;assembly=BPiaoBao.Client.UIExt" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" x:Class="BPiaoBao.Client.DomesticTicket.View.OrderManagerControl" 
             mc:Ignorable="d" 
             d:DesignHeight="1147" d:DesignWidth="1249" Width="Auto" Height="Auto" d:DataContext="{d:DesignData /SampleData/OrderManagerViewModelSampleData.xaml}">
	<UserControl.Resources>
        <Converters:PassengersConverter x:Key="PassengersConverter"/>
		<Converters:SkywaysConverter x:Key="SkywaysConverter"/>
		<Converters:OrderStatusConverter x:Key="OrderStatusConverter"/>
        <Converters:SpecialBooleanToVisibilityConverter x:Key="SpecialBooleanToVisibilityConverter" />
        <Converters:ShowBtnPayStatusVisableConverter x:Key="ShowBtnPayStatusVisableConverter"/>
        <Converters:ShowBtnConfirmVisableConverter x:Key="ShowBtnConfirmVisableConverter"/>
        <Style x:Key="OrangeTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Themes:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderFocused="{TemplateBinding IsKeyboardFocusWithin}" SnapsToDevicePixels="true" BorderBrush="{DynamicResource OrangeBorder}">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Themes:ListBoxChrome>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="OrderStatusTemplate">
			<Grid>
				<StackPanel HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch">
					<TextBlock TextWrapping="Wrap" Text="{Binding OrderStatus, Converter={StaticResource OrderStatusConverter}}"/>
					<TextBlock TextWrapping="Wrap" Text="{Binding OrderStatus, ConverterParameter=1, Converter={StaticResource OrderStatusConverter}}" Foreground="{StaticResource OrangeForeground}"/>
				</StackPanel>
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="CommissionTemplate">
			<Grid>
				<StackPanel HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Top" Width="Auto">
					<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="{Binding Policy.Point, StringFormat=\{0\}%}" VerticalAlignment="Top"/>
					<!--<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap"  VerticalAlignment="Center" Foreground="#FFFB6D00" Text="{Binding Policy.Commission,StringFormat=￥{0:f2}}"/>-->
				</StackPanel>
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="SkyWayTemplate">
			<Grid>
				<ItemsControl Height="Auto" VerticalAlignment="Stretch" Width="Auto" ItemsSource="{Binding SkyWays, Mode=OneWay}" ItemTemplate="{StaticResource SkywayItemTemplate}"/>
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="PassengersTemplate">
			<Grid>
				<ItemsControl HorizontalAlignment="Left" Height="Auto" VerticalAlignment="Top" ItemsSource="{Binding Passengers}" DisplayMemberPath="PassengerName"/>
			</Grid>
		</DataTemplate>
		<DataTemplate x:Key="OperaTemplate">
			<Grid>
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="LayoutUpdated">
						<i:Interaction.Behaviors>
							<ei:ConditionBehavior>
                                <ei:ConditionalExpression>
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="16"/>
								</ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:GoToStateAction StateName="PaymentInWaiting"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
						<i:Interaction.Behaviors>
							<ei:ConditionBehavior>
								<!--<ei:ConditionalExpression>
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="2"/>
								</ei:ConditionalExpression>-->
                                <ei:ConditionalExpression  ForwardChaining="And">
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="2"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding PayMethodCode,Converter={StaticResource ShowBtnPayStatusVisableConverter}}" RightOperand="false"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderSource,Converter={StaticResource ShowBtnConfirmVisableConverter}}" RightOperand="false"/>
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
						</i:Interaction.Behaviors>
						<ei:GoToStateAction StateName="NewOrderState"/>
					</i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
                        <i:Interaction.Behaviors>
                            <ei:ConditionBehavior>
                                <ei:ConditionalExpression  ForwardChaining="And">
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="2"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding PayMethodCode,Converter={StaticResource ShowBtnPayStatusVisableConverter}}" RightOperand="true"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderSource,Converter={StaticResource ShowBtnConfirmVisableConverter}}" RightOperand="false"/>
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:GoToStateAction StateName="NewOrderStateAndQueryPayStatus"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
                        <i:Interaction.Behaviors>
                            <ei:ConditionBehavior>
                                <ei:ConditionalExpression  ForwardChaining="And">
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="2"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding PayMethodCode,Converter={StaticResource ShowBtnPayStatusVisableConverter}}" RightOperand="false"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderSource,Converter={StaticResource ShowBtnConfirmVisableConverter}}" RightOperand="true"/>
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:GoToStateAction StateName="NewOrderStateAndApplyBaby"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
                        <i:Interaction.Behaviors>
                            <ei:ConditionBehavior>
                                <ei:ConditionalExpression  ForwardChaining="And">
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="2"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding PayMethodCode,Converter={StaticResource ShowBtnPayStatusVisableConverter}}" RightOperand="true"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderSource,Converter={StaticResource ShowBtnConfirmVisableConverter}}" RightOperand="true"/>
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:GoToStateAction StateName="NewOrderStateAndQueryPayStatusApplyBaby"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
						<i:Interaction.Behaviors>
							<ei:ConditionBehavior>
								<ei:ConditionalExpression ForwardChaining="Or">
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="4"/>
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="6"/>
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="7"/>
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="8"/>
								</ei:ConditionalExpression>
							</ei:ConditionBehavior>
						</i:Interaction.Behaviors>
						<ei:GoToStateAction StateName="InvalidState"/>
					</i:EventTrigger>
					<i:EventTrigger EventName="LayoutUpdated">
						<i:Interaction.Behaviors>
							<ei:ConditionBehavior>
                                <ei:ConditionalExpression ForwardChaining="And">
                                    <!--<ei:ConditionalExpression ForwardChaining="Or">-->
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="3"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding NotFromWhiteScreenDestine}" RightOperand="false"/>
                                    <!--<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="5"/>-->
								</ei:ConditionalExpression>
							</ei:ConditionBehavior>
						</i:Interaction.Behaviors>
						<ei:GoToStateAction StateName="CompletedState"/>
					</i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
                        <i:Interaction.Behaviors>
                            <ei:ConditionBehavior>
                                <ei:ConditionalExpression ForwardChaining="And">
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="3"/>
                                    <ei:ComparisonCondition LeftOperand="{Binding NotFromWhiteScreenDestine}" RightOperand="true"/>
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:GoToStateAction StateName="CompletedWithAuthState"/>
                    </i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
						<i:Interaction.Behaviors>
							<ei:ConditionBehavior>
								<ei:ConditionalExpression>
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="1"/>
								</ei:ConditionalExpression>
							</ei:ConditionBehavior>
						</i:Interaction.Behaviors>
						<ei:GoToStateAction StateName="WaitChooseState"/>
					</i:EventTrigger>
					<i:EventTrigger EventName="LayoutUpdated">
						<i:Interaction.Behaviors>
							<ei:ConditionBehavior>
								<ei:ConditionalExpression>
									<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="5"/>
								</ei:ConditionalExpression>
							</ei:ConditionBehavior>
						</i:Interaction.Behaviors>
						<ei:GoToStateAction StateName="IssueAndCompletedState"/>
					</i:EventTrigger>
                    <i:EventTrigger EventName="LayoutUpdated">
                        <i:Interaction.Behaviors>
                            <ei:ConditionBehavior>
                                <ei:ConditionalExpression>
                                    <ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="13"/>
                                </ei:ConditionalExpression>
                            </ei:ConditionBehavior>
                        </i:Interaction.Behaviors>
                        <ei:GoToStateAction StateName="ApplyBabyFail"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="VisualStateGroup">
                        <VisualState x:Name="PaymentInWaiting">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
						<VisualState x:Name="NewOrderState">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
						</VisualState>
                        <VisualState x:Name="NewOrderStateAndQueryPayStatus">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="NewOrderStateAndApplyBaby">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="NewOrderStateAndQueryPayStatusApplyBaby">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="WaitChooseState">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
						</VisualState>
						<VisualState x:Name="CompletedState">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
						</VisualState>
                        <VisualState x:Name="CompletedWithAuthState">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="InvalidState">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
						</VisualState>
						<VisualState x:Name="IssueAndCompletedState">
							<Storyboard>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnReissue">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnPay">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnSendMsg">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
						</VisualState>
                        <VisualState x:Name="ApplyBabyFail">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnCancel">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnConfirm">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnAuth">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnQueryPayStatus">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<StackPanel HorizontalAlignment="Stretch" Height="Auto" VerticalAlignment="Stretch" Width="Auto" Margin="0,5,0,2">
				<!--	<i:Interaction.Triggers>
						<i:EventTrigger>
							<i:Interaction.Behaviors>
								<ei:ConditionBehavior>
									<ei:ConditionalExpression>
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="2"/>
									</ei:ConditionalExpression>
								</ei:ConditionBehavior>
							</i:Interaction.Behaviors>
							<ei:GoToStateAction StateName="NewOrderState"/>
						</i:EventTrigger>
						<i:EventTrigger>
							<i:Interaction.Behaviors>
								<ei:ConditionBehavior>
									<ei:ConditionalExpression ForwardChaining="Or">
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="4"/>
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="6"/>
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="7"/>
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="8"/>
									</ei:ConditionalExpression>
								</ei:ConditionBehavior>
							</i:Interaction.Behaviors>
							<ei:GoToStateAction StateName="InvalidState"/>
						</i:EventTrigger>
						<i:EventTrigger>
							<i:Interaction.Behaviors>
								<ei:ConditionBehavior>
									<ei:ConditionalExpression ForwardChaining="Or">
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="3"/>
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="5"/>
									</ei:ConditionalExpression>
								</ei:ConditionBehavior>
							</i:Interaction.Behaviors>
							<ei:GoToStateAction StateName="CompletedState"/>
						</i:EventTrigger>
						<i:EventTrigger>
							<i:Interaction.Behaviors>
								<ei:ConditionBehavior>
									<ei:ConditionalExpression>
										<ei:ComparisonCondition LeftOperand="{Binding OrderStatus}" RightOperand="1"/>
									</ei:ConditionalExpression>
								</ei:ConditionBehavior>
							</i:Interaction.Behaviors>
							<ei:GoToStateAction StateName="WaitChooseState"/>
						</i:EventTrigger>
					</i:Interaction.Triggers>
					-->
					<!--<Button x:Name="btnPay" Content="立即支付" HorizontalAlignment="Stretch" Style="{StaticResource PayBtn}" Width="57" Height="21" Margin="0,0,0,3" Command="{Binding DataContext.PayCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" Visibility="Collapsed" />-->
                    <Button x:Name="btnAuth" Content="授     权" Style="{StaticResource LinkBtn}" HorizontalAlignment="Stretch" Margin="0,0,0,3" Command="{Binding DataContext.AuthCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" Visibility="Collapsed" />
                    <Button x:Name="btnPay" Content="立即支付" HorizontalAlignment="Stretch" Style="{StaticResource PayBtn}" Width="57" Height="21" Margin="0,0,0,3" Command="{Binding DataContext.PayCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" Visibility="Collapsed" />
                    <Button x:Name="btnQueryPayStatus" Content="支付查询" HorizontalAlignment="Stretch" Width="57" Height="21" Margin="0,0,0,3" Visibility="Collapsed" Command="{Binding DataContext.QueryPayStatusCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" />
                    <Button x:Name="btnConfirm" Content="确认政策" HorizontalAlignment="Stretch" Width="57" Height="21" Margin="0,0,0,3" Visibility="Collapsed" Command="{Binding DataContext.ChoosePolicyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" />
                    <Button x:Name="btnSendMsg" Content="发送短信" HorizontalAlignment="Stretch" Width="57" Height="21" Margin="0,0,0,3" Command="{Binding DataContext.OpenSendMsgCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" Visibility="Collapsed" />
					<Button x:Name="btnOrderInfo" Content="订单详情" Margin="0,0,0,3" Style="{StaticResource LinkBtn}" Command="{Binding DataContext.OpenOrderInfoCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" />
					<Button x:Name="btnCancel" Content="取消订单" Style="{StaticResource LinkBtn}" Command="{Binding DataContext.CancelOrderCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" Visibility="Collapsed" Margin="0,0,0,3"/>
                    <Button x:Name="btnReissue" Content="退废改申请" Style="{StaticResource LinkBtn}" Command="{Binding DataContext.ReissueCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}" Visibility="Collapsed" Margin="0,0,0,3"/>
					
				</StackPanel>
			</Grid>
		</DataTemplate>
		<ControlTemplate x:Key="readTemplate">
			<TextBlock Text="{Binding Mode=OneWay}" />
		</ControlTemplate>
		<ControlTemplate x:Key="copyTempate">
			<TextBox IsReadOnly="True" Text="{Binding Mode=OneWay}" >
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="MouseMove">
						<ei:CallMethodAction MethodName="SelectAll"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</TextBox>
		</ControlTemplate>
		<DataTemplate x:Key="pnrColumnDataTemplate">
			<Grid>
				<StackPanel Height="Auto" VerticalAlignment="Stretch" Width="Auto">
                    <!--<TextBlock Text="[特价]" HorizontalAlignment="Left" Foreground="Red" Visibility="{Binding Policy.PolicySpecialType,Converter={StaticResource SpecialBooleanToVisibilityConverter}}"/>-->
                    <Image Stretch="None" HorizontalAlignment="Left" Source="../Image/tejia_r.png" Visibility="{Binding Policy.PolicySpecialType,Converter={StaticResource SpecialBooleanToVisibilityConverter}}"/>
                    <TextBlock TextWrapping="Wrap" Text="{Binding ShowPnrCode}"/>
                    <TextBlock TextWrapping="Wrap" Text="{Binding ShowNewPnrCode}" />
                    <TextBlock TextWrapping="Wrap" Text="{Binding PassengerType}"/>
                    <TextBlock TextWrapping="Wrap" Visibility="{Binding HasAfterSale, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="0,2">
						<Hyperlink Command="{Binding DataContext.OpenAfterSaleCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}">退废改记录</Hyperlink>
					</TextBlock>
					<TextBlock TextWrapping="Wrap" Margin="0,2" Visibility="Collapsed">
						<Hyperlink Command="{Binding DataContext.OpenCoordinationCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}">协调信息</Hyperlink>
					</TextBlock>
                </StackPanel>
			</Grid>
		</DataTemplate>				
	</UserControl.Resources>
	<UserControl.DataContext>
		<ViewModel:OrderManagerViewModel/>
	</UserControl.DataContext>
	<Grid Background="White">
		<Grid.RowDefinitions>
			<RowDefinition Height="35"/>
			<RowDefinition Height="Auto" MaxHeight="180"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid Background="{DynamicResource HeadBg2}">
			<TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="条件查找" VerticalAlignment="Center" Margin="15,0,0,0" Style="{DynamicResource Head2TextBlock}"/>
		</Grid>
		<Grid Grid.Row="1">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="541*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Border Grid.ColumnSpan="2" BorderThickness="2" BorderBrush="{StaticResource OrangeBorder}" Background="#FFFFF9F1" Margin="15,13">
				<Grid MinHeight="52">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<WrapPanel VerticalAlignment="Center" Margin="0">
						<StackPanel Orientation="Horizontal" Margin="5,5,25,5" VerticalAlignment="Center">
							<TextBlock TextWrapping="Wrap" Text="订单号：" VerticalAlignment="Center" Foreground="{StaticResource OrangeForeground}"/>
							<TextBox Height="22" TextWrapping="Wrap" Width="170" Style="{StaticResource OrangeTextBoxStyle}" Text="{Binding OrderId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Margin="0,5,25,5" VerticalAlignment="Center">
							<TextBlock TextWrapping="Wrap" Text="PNR编号：" VerticalAlignment="Center" Foreground="{StaticResource OrangeForeground}"/>
							<TextBox Height="22" TextWrapping="Wrap" Width="170" Style="{StaticResource OrangeTextBoxStyle}" Text="{Binding PnrCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Margin="5,5,25,5" VerticalAlignment="Center">
							<TextBlock TextWrapping="Wrap" Text="乘机人：" VerticalAlignment="Center" Foreground="{StaticResource OrangeForeground}"/>
							<TextBox Height="22" TextWrapping="Wrap" Width="170" Style="{StaticResource OrangeTextBoxStyle}" Text="{Binding PassengerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal" Margin="0,5,25,5" VerticalAlignment="Center">
							<TextBlock TextWrapping="Wrap" Text="订单状态：" VerticalAlignment="Center" Foreground="{StaticResource OrangeForeground}"/>
							<ComboBox Width="170" BorderBrush="{StaticResource OrangeBorder}" Height="22" Background="White" ItemsSource="{Binding AllOrderStatus}" DisplayMemberPath="Value" SelectedValuePath="Key" SelectedValue="{Binding SelectedOrderStatus, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
						</StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5,5,25,5" VerticalAlignment="Center">
                            <TextBlock TextWrapping="Wrap" Text="创建日期：" VerticalAlignment="Center" Foreground="{StaticResource OrangeForeground}"/>
                            <DatePicker VerticalAlignment="Center" Margin="0,0,5,0"  SelectedDate="{Binding StartCreateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="110" Height="22" />
                            <TextBlock TextWrapping="Wrap" Text="一" VerticalAlignment="Center" Style="{DynamicResource HorizontalLineTextBlock}"/>
                            <DatePicker VerticalAlignment="Center" Margin="5,0,0,0"  SelectedDate="{Binding EndCreateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="22" Width="110" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5,5,25,5" VerticalAlignment="Center">
                            <TextBlock TextWrapping="Wrap" Text="航班日期：" VerticalAlignment="Center" Foreground="{StaticResource OrangeForeground}"/>
                            <DatePicker VerticalAlignment="Center" Margin="0,0,5,0"  SelectedDate="{Binding StartFlightTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="110" Height="22" />
                            <TextBlock TextWrapping="Wrap" Text="一" VerticalAlignment="Center" Style="{DynamicResource HorizontalLineTextBlock}"/>
                            <DatePicker VerticalAlignment="Center" Margin="5,0,0,0"  SelectedDate="{Binding EndFlightTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Height="22" Width="110" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="5,5,25,5" VerticalAlignment="Center">
                            <TextBlock TextWrapping="Wrap" Text="交易号：" VerticalAlignment="Center" Foreground="{StaticResource OrangeForeground}"/>
                            <TextBox Height="22" TextWrapping="Wrap" Width="170" Style="{StaticResource OrangeTextBoxStyle}" Text="{Binding OutTradeNo, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </WrapPanel>
					<Button Content="查询" HorizontalAlignment="Center" VerticalAlignment="Center" Width="57" Style="{DynamicResource OrangeBtn}" Foreground="Black" Height="22" Grid.Column="1" Margin="0,0,48,0" Command="{Binding QueryCommand}">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ei:ChangePropertyAction PropertyName="CurrentPageIndex" Value="1" TargetObject="{Binding Mode=OneWay}"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
					</Button>
				</Grid>
			</Border>
		</Grid>
		<Grid Margin="15,0,15,15" Grid.Row="2">
			<Grid.RowDefinitions>
				<RowDefinition Height="390*"/>
				<RowDefinition Height="31*"/>
			</Grid.RowDefinitions>
			<DataGrid x:Name="dg" ScrollViewer.CanContentScroll="True" ClipboardCopyMode="ExcludeHeader" BorderThickness="0" ItemsSource="{Binding Orders}" AutoGenerateColumns="False" GridLinesVisibility="Horizontal" Background="{x:Null}" MinRowHeight="65" HorizontalGridLinesBrush="#7FA6C3E3" HeadersVisibility="Column" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" CanUserAddRows="False" CanUserDeleteRows="False">
				<DataGrid.Columns>
					<DataGridTextColumn Width="1.1*" Header="创建时间" Binding="{Binding CreateTime,StringFormat=yyyy-MM-dd HH:mm:ss}" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
					<DataGridTextColumn Width="1.3*" Header="订单号" Binding="{Binding OrderId}" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTextColumn Width="1.3*" Header="交易号" Binding="{Binding OutTradeNo}" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding ShowPnrCode}" Width="*" Header="PNR编号" CellTemplate="{StaticResource pnrColumnDataTemplate}" />
					<DataGridTextColumn Width="*" Header="平台名称" Binding="{Binding Policy.PlatformName}" ElementStyle="{StaticResource WrappedCenteredTextBlock}" Visibility="Collapsed"/>
					<DataGridTemplateColumn  Width="0.8*" ClipboardContentBinding="{Binding OrderStatus, ConverterParameter=all, Converter={StaticResource OrderStatusConverter}}" Header="订单状态" CellTemplate="{StaticResource OrderStatusTemplate}"/>
					<DataGridTemplateColumn  Width="0.7*" ClipboardContentBinding="{Binding Policy.Point}" Header="返点" CellTemplate="{StaticResource CommissionTemplate}"/>
					<DataGridTextColumn ClipboardContentBinding="{Binding OrderMoney, StringFormat=￥\{0\}}"   Width="*" Binding="{Binding OrderMoney, StringFormat=￥\{0\}}" Header="支付金额" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTextColumn ClipboardContentBinding="{Binding TicketSumPrice, StringFormat=￥\{0\}}"   Width="*" Binding="{Binding TicketSumPrice, StringFormat=￥\{0\}}" Header="票面总价" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding SkyWays, Converter={StaticResource SkywaysConverter}}"  Width="*" Header="行程" CellTemplate="{StaticResource SkyWayTemplate}"/>
                    <DataGridTemplateColumn  Width="*" Header="乘机人" CellTemplate="{StaticResource PassengersTemplate}" ClipboardContentBinding="{Binding Passengers, Converter={StaticResource PassengersConverter}}"/>				
					<DataGridTemplateColumn  Width="*" ClipboardContentBinding="{x:Null}" Header="操作" CellTemplate="{StaticResource OperaTemplate}"/>
                    <!--<DataGridTextColumn Width="auto" Header="创建时间" Binding="{Binding CreateTime,StringFormat=yyyy-MM-dd HH:mm:ss}" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTextColumn Width="auto" Header="订单号" Binding="{Binding OrderId}" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTextColumn Width="auto" Header="交易号" Binding="{Binding OutTradeNo}" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding ShowPnrCode}" Width="auto" Header="PNR编号" CellTemplate="{StaticResource pnrColumnDataTemplate}" />
                    <DataGridTextColumn Width="auto" Header="平台名称" Binding="{Binding Policy.PlatformName}" ElementStyle="{StaticResource WrappedCenteredTextBlock}" Visibility="Collapsed"/>
                    <DataGridTemplateColumn  Width="auto" ClipboardContentBinding="{Binding OrderStatus, ConverterParameter=all, Converter={StaticResource OrderStatusConverter}}" Header="订单状态" CellTemplate="{StaticResource OrderStatusTemplate}"/>
                    <DataGridTemplateColumn  Width="auto" ClipboardContentBinding="{Binding Policy.Point}" Header="返点" CellTemplate="{StaticResource CommissionTemplate}"/>
                    <DataGridTextColumn ClipboardContentBinding="{Binding OrderMoney, StringFormat=￥\{0\}}"   Width="auto" Binding="{Binding OrderMoney, StringFormat=￥\{0\}}" Header="支付金额" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTextColumn ClipboardContentBinding="{Binding TicketSumPrice, StringFormat=￥\{0\}}"   Width="auto" Binding="{Binding TicketSumPrice, StringFormat=￥\{0\}}" Header="票面总价" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                    <DataGridTemplateColumn ClipboardContentBinding="{Binding SkyWays, Converter={StaticResource SkywaysConverter}}"  Width="auto" Header="行程" CellTemplate="{StaticResource SkyWayTemplate}"/>
                    <DataGridTemplateColumn  Width="auto" Header="乘机人" CellTemplate="{StaticResource PassengersTemplate}" ClipboardContentBinding="{Binding Passengers, Converter={StaticResource PassengersConverter}}"/>
                    <DataGridTemplateColumn  Width="auto" ClipboardContentBinding="{x:Null}" Header="操作" CellTemplate="{StaticResource OperaTemplate}"/>-->
                </DataGrid.Columns>
			</DataGrid>
            
			<WPFSpark:SprocketControl HorizontalAlignment="Center" Height="100" VerticalAlignment="Center" Width="100" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            
			<UIExt:Pagination Grid.Row="1" CurrentPageIndex="{Binding CurrentPageIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PageSize="{Binding PageSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TotalCount="{Binding TotalCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="PageChanged">
						<i:InvokeCommandAction Command="{Binding QueryCommand}"/>
					</i:EventTrigger>
				</i:Interaction.Triggers>
			</UIExt:Pagination>
            
		</Grid>
            
	</Grid>
</UserControl>
