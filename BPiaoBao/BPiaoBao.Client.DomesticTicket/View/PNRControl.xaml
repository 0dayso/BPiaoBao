<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions" 
    xmlns:Converters="clr-namespace:BPiaoBao.Client.DomesticTicket.View.Converters" 
    xmlns:ViewModel="clr-namespace:BPiaoBao.Client.DomesticTicket.ViewModel"
    xmlns:Converter="clr-namespace:BPiaoBao.Client.UIExt.Converter;assembly=BPiaoBao.Client.UIExt"
    xmlns:WPFSpark="clr-namespace:WPFSpark;assembly=WPFSpark"
    xmlns:oxy="http://oxyplot.codeplex.com"
    xmlns:view="clr-namespace:BPiaoBao.Client.DomesticTicket.View"
    x:Name="userControl" x:Class="BPiaoBao.Client.DomesticTicket.View.PNRControl" 
             mc:Ignorable="d" 
             d:DesignHeight="956.667" d:DesignWidth="1833.65" Background="White" >
    <UserControl.Resources>
        <ResourceDictionary>
            <Converters:SinglePriceConverter x:Key="SinglePriceConverter"/>
            <Converters:ShowGridHeaderTextConverter x:Key="ShowGridHeaderTextConverter"/>
            <Converters:ShowLinkConverter x:Key="ShowLinkConverter"/>
            <Converters:SpecialBooleanToVisibilityConverter x:Key="SpecialBooleanToVisibilityConverter" />
            <Converters:LocalPolicyBooleanToVisibilityConverter x:Key="LocalPolicyBooleanToVisibilityConverter"/>
            <DataTemplate x:Key="issusSpeedDataTemplate">
                <Grid Height="Auto" Width="Auto">
                    <TextBlock Text="{Binding IssueSpeed}" TextWrapping="Wrap" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" Background="{x:Null}" />
                    <!--<TextBlock TextWrapping="Wrap" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" Background="White"><Hyperlink Command="{Binding DataContext.OpenUriCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="http://info.517na.com/dm/dm6.html" NavigateUri="http://info.517na.com/dm/dm6.html"><Run Text="{Binding IssueSpeed}"/></Hyperlink></TextBlock>-->
                    <Border Height="46" Width="82" BorderThickness="1" BorderBrush="#FFD0A77A" Visibility="{Binding IssueSpeed, ConverterParameter=极速, Converter={StaticResource ShowLinkConverter}, Mode=OneWay}">
                        <Grid Background="#FFF7F7F7">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="18"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Grid Background="#FFFF6600">
                                <TextBlock TextWrapping="Wrap" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="13.333">
									<Hyperlink Foreground="White" Command="{Binding DataContext.OpenUriCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="http://info.517na.com/dm/dm6.html" >极  速</Hyperlink>
                                </TextBlock>
                            </Grid>
                            <TextBlock TextWrapping="Wrap" d:LayoutOverrides="Width, Height" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0" FontSize="8pt">
								<Hyperlink Foreground="#FFEA762E" Command="{Binding DataContext.OpenUriCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="http://info.517na.com/dm/dm6.html" >1分钟出票，支付后NO位全赔</Hyperlink>
                            </TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>
            <DataTemplate x:Key="TypeDataTemplate">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="{Binding PolicyType}" />
                    <TextBlock Text="换编码出票" Foreground="Orange" Visibility="{Binding IsChangePNRCP,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <TextBlock Text="(本地)"  Visibility="{Binding PolicySourceType,Converter={StaticResource LocalPolicyBooleanToVisibilityConverter}}"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="TicketPriceDataTemplate">
                <StackPanel Orientation="Vertical">
                    <Image Stretch="None" HorizontalAlignment="Left" Source="../Image/tejia_r.png" Visibility="{Binding PolicySpecialType,Converter={StaticResource SpecialBooleanToVisibilityConverter}}"/>
                    <TextBlock Text="{Binding TicketPrice}" />
                </StackPanel>
            </DataTemplate>
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="CbShowHideButtonConStyle" TargetType="{x:Type CheckBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">

                                <Border x:Name="bdExtend" Padding="5" BorderBrush="#FF979595" BorderThickness="1" CornerRadius="3"  >
                                    <StackPanel Orientation="Horizontal">

                                        <TextBlock x:Name="textBlock" VerticalAlignment="Center" 
        								TextWrapping="Wrap" Margin="4,0" Foreground="#FF63A5F3" Width="auto" 
        								Text="{TemplateBinding Content}" 
        								HorizontalAlignment="Center"/>


                                    </StackPanel>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="False">
                                    <Setter Property="BorderBrush" TargetName="bdExtend" Value="#FF979595"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Background" TargetName="bdExtend" Value="AliceBlue"/>
                                </Trigger>
                            </ControlTemplate.Triggers>



                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>

    </UserControl.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger>
            <ei:CallMethodAction MethodName="OnLoaded" TargetObject="{Binding Mode=OneWay}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.DataContext>
        <ViewModel:PNRViewModel/>
    </UserControl.DataContext>
    <Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="PNRTypeStateGroup">
                <VisualState x:Name="Normal0State">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border0">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ChildPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UpPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="NormalState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border0">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ChildPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UpPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="ChildState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border0">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ChildPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UpPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="UpState">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border0">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="border">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ChildPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="UpPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <!--初始view-->
            <VisualStateGroup x:Name="ChildStateGroup">
                <VisualState x:Name="Child1State">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Child2">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Child1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnToPlot">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>-->
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="Child2State">
                    <Storyboard>
                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Child1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>-->
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Child2">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnToList">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnToPlot">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>-->
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="TextBoxStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:0.2"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="FocusState">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="border">
                            <EasingDoubleKeyFrame KeyTime="0" Value="300"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnStackPanel">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusState1">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="border1">
                            <EasingDoubleKeyFrame KeyTime="0" Value="300"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnStackPanel1">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="FocusState0">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="border0">
                            <EasingDoubleKeyFrame KeyTime="0" Value="300"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="btnStackPanel0">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="UnFocusState"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="120"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border x:Name="topBorder" BorderThickness="0,0,0,1" BorderBrush="#FFD6E5EC">
            <Grid Background="#FFF9F9F9">
                <Grid.RowDefinitions>
                    <RowDefinition></RowDefinition>
                    <RowDefinition></RowDefinition>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" Margin="35,40,0,0" Grid.ColumnSpan="2" HorizontalAlignment="Left">
                    <RadioButton GroupName="type" Content="PNR内容导入" Margin="0,0,0,0" IsChecked="True">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ei:GoToStateAction StateName="Normal0State"/>
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectCommand0, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton GroupName="type" Content="PNR编码导入" Margin="10,0,0,0" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ei:GoToStateAction StateName="NormalState"/>
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton GroupName="type" Content="儿童编码导入" Margin="10,0,0,0" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ei:GoToStateAction StateName="ChildState"/>
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectCommand1, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <RadioButton GroupName="type" Content="升舱换开" Margin="10,0,0,0" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Checked">
                                <ei:GoToStateAction StateName="UpState"/>
                                <i:InvokeCommandAction Command="{Binding DataContext.SelectCommand2, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Mode=OneWay}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </RadioButton>
                    <CheckBox Margin="10,0,5,0" IsChecked="{Binding IsChangePnrTicket,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Content="允许换编码出票"/>
                    <!--<TextBlock Text="允许换编码出票"/>-->
                    <CheckBox Margin="10,0,5,0" IsChecked="{Binding IsLowPrice,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Content="使用低价"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" d:LayoutOverrides="Height" Grid.Column="1" Grid.Row="2">
                    <Button Content="导入内容" HorizontalAlignment="Right" Width="93" Command="{Binding ImportPNRCommand}" Height="35" CommandParameter="{Binding Text, ElementName=watermarkTextBox}" Style="{StaticResource HeadBtn}" >
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:GoToStateAction StateName="Child2State"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <!--<Button x:Name="btnToList" Style="{DynamicResource ImageBtn}" Width="35" Height="35" ToolTip="切换到政策列表" Margin="10,0,0,0">
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ei:GoToStateAction StateName="Child2State"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
						<Image Height="31" Source="/BPiaoBao.Client.DomesticTicket;component/Image/toggleBtn.png" Stretch="Fill" Width="31"/>
					</Button>-->
                    <!--<Button x:Name="btnToPlot" Style="{DynamicResource ImageBtn}" Width="35" Height="35" ToolTip="切换到出票统计" Margin="10,0,0,0" >
						<i:Interaction.Triggers>
							<i:EventTrigger EventName="Click">
								<ei:GoToStateAction StateName="Child1State"/>
							</i:EventTrigger>
						</i:Interaction.Triggers>
						<Image Height="31" Source="/BPiaoBao.Client.DomesticTicket;component/Image/toggleBtn.png" Stretch="Fill" Width="31"/>
					</Button>-->
                    <CheckBox Content="隐" x:Name="cbSH" Height="35"  Checked="ToggleButton_OnChecked" Unchecked="ToggleButton_OnUnchecked" Style="{StaticResource CbShowHideButtonConStyle}"  Margin="20,0" >

                    </CheckBox>
                </StackPanel>
            </Grid>
        </Border>
        <Grid Grid.Row="1" Focusable="True">
            <!--<Grid x:Name="Child1" Margin="25,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="45"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="0"/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="textBlock" HorizontalAlignment="Left" Margin="0,15.163,0,0" TextWrapping="Wrap" Text="最新出票统计" VerticalAlignment="Top" Height="15.837" Style="{DynamicResource Head2TextBlock}"/>
                <TextBlock HorizontalAlignment="Left" Margin="36.994,10,0,0" TextWrapping="Wrap" Text="最新公告" VerticalAlignment="Top" Height="15.837" Width="72" Grid.Row="2"/>
                <oxy:Plot Grid.Row="1" Padding="-19,8,-4,8" LegendBackground="#FFBB4545" LegendBorder="#FFD63A00" PlotAreaBorderColor="#FFCEDDE5" TextColor="#FF858DA4" Background="#FFFBFCFE" Margin="0,0,0,20" BorderBrush="#FFCEDDE5" BorderThickness="1">
                    <oxy:Plot.Axes>
                        <oxy:LinearAxis IsZoomEnabled="False" Position="Left" TicklineColor="#FFB9CADC" IsPanEnabled="False" Minimum="-0.01"/>
                        <oxy:CategoryAxis TicklineColor="#FFB9CADC" IsZoomEnabled="False" IsPanEnabled="False" ItemsSource="{Binding ChartModel}" LabelField="DayFormatString" />
                    </oxy:Plot.Axes>
                    <oxy:ColumnSeries ItemsSource="{Binding ChartModel}" TrackerFormatString="交易额：￥{4:f2}" ValueField="TradeTotalMoney" FillColor="#FF46ADE8" />
                    DataFieldX="Day" DataFieldY="TradeTotalMoney" TrackerFormatString="时间：{2:yyyy-MM-dd}&#xa;交易额：￥{4:f2}" -->
            <!--</oxy:Plot>
            </Grid>-->
            <Grid x:Name="Child2" Background="White" Margin="25,0" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="45"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <DataGrid x:Name="dg" ItemsSource="{Binding Policys}" AutoGenerateColumns="False" Foreground="Black" RowDetailsVisibilityMode="Visible" RowDetailsTemplate="{StaticResource PolicyRowDetailDataTemplate}" BorderThickness="0" BorderBrush="{x:Null}" Background="{x:Null}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" RowHeight="50" GridLinesVisibility="None" HorizontalGridLinesBrush="#FFE0E0E0" IsReadOnly="True" HeadersVisibility="Column" Grid.Row="1" >
                    <DataGrid.Columns>
                        <!--<DataGridTemplateColumn SortMemberPath="Point" ClipboardContentBinding="{Binding Commission, StringFormat=￥\{0:f0\}}" Header="返点/佣金" MinWidth="80" CellTemplate="{StaticResource PolicyCommissionTemplate}" Width="Auto" SortDirection="Descending"/>
                        <DataGridTemplateColumn Header="票面价" Width="Auto" CellTemplate="{StaticResource TicketPriceDataTemplate}"/>
                        <DataGridTextColumn Header="单人支付金额" Binding="{Binding Converter={StaticResource SinglePriceConverter}, Mode=OneWay, StringFormat=￥\{0:f2\}}" Width="Auto" />
                        <DataGridTemplateColumn Header="类型" Width="Auto" CellTemplate="{StaticResource TypeDataTemplate}"/>
                        <DataGridTemplateColumn ClipboardContentBinding="{Binding IssueSpeed}" Header="出票速度" Width="Auto" CellTemplate="{StaticResource issusSpeedDataTemplate}"/>
                        <DataGridTextColumn Binding="{Binding WorkTime}" Header="上班时间" Width="Auto" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                        <DataGridTextColumn Binding="{Binding TFGTime}" Header="废票改签时间" Width="Auto" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                        <DataGridTemplateColumn CellTemplate="{StaticResource PolicyOperaTemplate}" Header="操作" Width="Auto" MinWidth="100"/>-->
                        <DataGridTemplateColumn SortMemberPath="Point" ClipboardContentBinding="{Binding Commission, StringFormat=￥\{0:f0\}}" Header="返点/佣金" MinWidth="80" CellTemplate="{StaticResource PolicyCommissionTemplate}" Width="*" SortDirection="Descending"/>
                        <DataGridTemplateColumn Header="票面价" Width="*" CellTemplate="{StaticResource TicketPriceDataTemplate}"/>
                        <DataGridTextColumn Header="单人支付金额" Binding="{Binding Converter={StaticResource SinglePriceConverter}, Mode=OneWay, StringFormat=￥\{0:f2\}}" Width="*" />
                        <DataGridTemplateColumn Header="类型" Width="*" CellTemplate="{StaticResource TypeDataTemplate}"/>
                        <DataGridTemplateColumn ClipboardContentBinding="{Binding IssueSpeed}" Header="出票速度" Width="*" CellTemplate="{StaticResource issusSpeedDataTemplate}"/>
                        <DataGridTextColumn Binding="{Binding WorkTime}" Header="上班时间" Width="*" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                        <DataGridTextColumn Binding="{Binding TFGTime}" Header="废票改签时间" Width="*" ElementStyle="{StaticResource WrappedCenteredTextBlock}"/>
                        <DataGridTemplateColumn CellTemplate="{StaticResource PolicyOperaTemplate}" Header="操作" Width="100"/>
                    </DataGrid.Columns>
                </DataGrid>
                <TextBlock HorizontalAlignment="Left" Margin="0,15.163,0,0" TextWrapping="Wrap" Text="政策列表" VerticalAlignment="Top" Height="15.837" Width="72" Style="{DynamicResource Head2TextBlock}"/>
            </Grid>

            <WPFSpark:SprocketControl Height="100" HorizontalAlignment="Center" VerticalAlignment="Center" Width="100" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </Grid>

        <StackPanel Orientation="Horizontal" Margin="35,70,0,0"  x:Name="ChildPanel" Grid.Row="0" Visibility="Collapsed">
            <TextBlock Text="成人订单号：" FontSize="18" Margin="0,6,0,0" ></TextBlock>
            <TextBox Width="180" Height="25" Margin="0,0,0,10" Text="{Binding OrderID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <StackPanel Orientation="Horizontal" Margin="35,70,0,0"  x:Name="UpPanel" Grid.Row="0" Visibility="Collapsed">
            <TextBlock Text="原订单号：" FontSize="18" Margin="0,6,0,0" ></TextBlock>
            <TextBox Width="200" Height="25" Margin="0,0,0,10" Text="{Binding OrderID,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
        </StackPanel>
        <Border x:Name="border1" VerticalAlignment="Top" Height="35" BorderThickness="2" BorderBrush="#FF63A4DC" CornerRadius="0.5" Margin="330,72.334,190,0" Padding="0" Grid.RowSpan="2" Grid.Row="0" Visibility="Collapsed">
            <Grid Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <xctk:WatermarkTextBox x:Name="watermarkTextBox1" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" FontSize="14.667" BorderThickness="0" Text="{Binding PnrCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <xctk:WatermarkTextBox.Watermark>
                        <Run Text="导入您的PNR编码或者内容(RT编码开始到PAT：A结果全部内容)" FontSize="13pt" />
                    </xctk:WatermarkTextBox.Watermark>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <ei:GoToStateAction StateName="FocusState1"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <ei:GoToStateAction StateName="UnFocusState"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:WatermarkTextBox>
                <StackPanel x:Name="btnStackPanel1" HorizontalAlignment="Right" Height="19.837" Orientation="Horizontal" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Button Content="清空" Width="75" VerticalAlignment="Bottom" Focusable="False">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=watermarkTextBox1}" PropertyName="Text" Value="{x:Null}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="收起" Width="75" VerticalAlignment="Bottom" Margin="10,0,0,0">
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <!--最初PNR编码导入view-->
        <Border x:Name="border" VerticalAlignment="Top" Height="35" BorderThickness="2" BorderBrush="#FF63A4DC" CornerRadius="0.5" Margin="35,72.334,190,0" Padding="0" Grid.RowSpan="2" Grid.Row="0" Visibility="Collapsed" >
            <Grid Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <xctk:WatermarkTextBox x:Name="watermarkTextBox" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" FontSize="14.667" BorderThickness="0" Text="{Binding PnrCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <xctk:WatermarkTextBox.Watermark>
                        <Run Text="导入您的PNR编码" FontSize="13pt" />
                    </xctk:WatermarkTextBox.Watermark>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <ei:GoToStateAction StateName="FocusState"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <ei:GoToStateAction StateName="UnFocusState"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:WatermarkTextBox>
                <StackPanel x:Name="btnStackPanel" HorizontalAlignment="Right" Height="19.837" Orientation="Horizontal" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Button Content="清空" Width="75" VerticalAlignment="Bottom" Focusable="False">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=watermarkTextBox}" PropertyName="Text" Value="{x:Null}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="收起" Width="75" VerticalAlignment="Bottom" Margin="10,0,0,0">
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <!--PNR内容导入-->
        <Border x:Name="border0" VerticalAlignment="Top" Height="35" BorderThickness="2" BorderBrush="#FF63A4DC" CornerRadius="0.5" Margin="35,72.334,190,0" Padding="0" Grid.RowSpan="2" Grid.Row="0" Visibility="Visible" >
            <Grid Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <xctk:WatermarkTextBox x:Name="watermarkTextBox0" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" FontSize="14.667" BorderThickness="0" Text="{Binding PnrCode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <xctk:WatermarkTextBox.Watermark>
                        <Run Text="导入您的PNR内容(RT编码开始到PAT：A结果全部内容)" FontSize="13pt" />
                    </xctk:WatermarkTextBox.Watermark>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="GotFocus">
                            <ei:GoToStateAction StateName="FocusState0"/>
                        </i:EventTrigger>
                        <i:EventTrigger EventName="LostFocus">
                            <ei:GoToStateAction StateName="UnFocusState"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </xctk:WatermarkTextBox>
                <StackPanel x:Name="btnStackPanel0" HorizontalAlignment="Right" Height="19.837" Orientation="Horizontal" VerticalAlignment="Bottom" Visibility="Collapsed">
                    <Button Content="清空" Width="75" VerticalAlignment="Bottom" Focusable="False">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <ei:ChangePropertyAction TargetObject="{Binding ElementName=watermarkTextBox0}" PropertyName="Text" Value="{x:Null}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <Button Content="收起" Width="75" VerticalAlignment="Bottom" Margin="10,0,0,0">
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>
